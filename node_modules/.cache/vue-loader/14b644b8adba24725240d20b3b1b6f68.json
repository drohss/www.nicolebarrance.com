{"remainingRequest":"/Users/callumds/Documents/sites/nicoles-site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/callumds/Documents/sites/nicoles-site/src/components/ComingSoon.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/callumds/Documents/sites/nicoles-site/src/components/ComingSoon.vue","mtime":1618261604961},{"path":"/Users/callumds/Documents/sites/nicoles-site/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/callumds/Documents/sites/nicoles-site/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/callumds/Documents/sites/nicoles-site/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/callumds/Documents/sites/nicoles-site/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/callumds/Documents/sites/nicoles-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/callumds/Documents/sites/nicoles-site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb21pbmctc29vbiB7CiAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICB0b3A6IDA7CiAgICBsZWZ0OiAwOwogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBiYWNrZ3JvdW5kOiAjMTExOwp9Cg=="},{"version":3,"sources":["ComingSoon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ComingSoon.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"coming-soon\">\n        <vue-p5\n                @preload=\"preload\"\n                @setup=\"setup\"\n                @draw=\"draw\"\n        ></vue-p5>\n    </div>\n</template>\n\n<script>\n    import VueP5 from 'vue-p5';\n    import p5 from 'p5/lib/p5.min.js';\n    import logo from '../assets/logo_image.svg'\n\n\n    export default {\n        name: 'ComingSoon',\n        components: {\n            'vue-p5': VueP5\n        },\n        data() {\n            return {\n                position: null,\n                velocity: null,\n                image: null,\n                test: null,\n                colors: [\n                    '#9b5de5',\n                    '#f15bb5',\n                    '#fee440',\n                    '#00bbf9',\n                    '#00f5d4'\n                ],\n                collisionIndex: 0\n            }\n        },\n        computed: {\n            logoDimensions() {\n                return this.isMobile()\n                    ? {width: this.image.width/3, height: this.image.height/3}\n                    : {width: this.image.width, height: this.image.height}\n            }\n        },\n        methods: {\n            isMobile() {\n                try {document.createEvent(\"TouchEvent\");return true;}\n                catch(e){return false;}\n            },\n            preload(sketch) {\n                this.position = sketch.createVector(0,0);\n                this.velocity = p5.Vector.fromAngle(45);\n                this.velocity.mult(5);\n                this.image = sketch.loadImage(logo);\n                sketch.frameRate(50);\n            },\n            setup(sketch) {\n                sketch.createCanvas(window.innerWidth, window.innerHeight);\n                sketch.tint(this.colors[this.collisionIndex])\n            },\n            draw(sketch) {\n                sketch.background('#111');\n\n                // Do something when image hits boundary\n                let hasCollision = this.checkBoundaryCollision(sketch)\n                if (hasCollision) {\n                    this.collisionIndex >= this.colors.length-1 ? this.collisionIndex = 0  : this.collisionIndex++\n                    sketch.tint(this.colors[this.collisionIndex])\n                }\n\n                this.position.add(this.velocity.x, this.velocity.y, this.velocity.z)\n\n                sketch.image(this.image, this.position.x, this.position.y, this.logoDimensions.width, this.logoDimensions.height)\n\n            },\n            checkBoundaryCollision(sketch) {\n                let hasCollision = false;\n\n                // left or right collision\n                if (this.position.x < 0 || this.position.x + this.logoDimensions.width > sketch.width) {\n                    this.velocity.x *= -1;\n                    hasCollision = true;\n                }\n\n                // top or bottom collision\n                if (this.position.y < 0 || this.position.y + this.logoDimensions.height > sketch.height)  {\n                    this.velocity.y *= -1;\n                    hasCollision = true;\n                }\n\n                return hasCollision\n            }\n        },\n        mounted() {\n\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .coming-soon {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: #111;\n    }\n</style>\n"]}]}